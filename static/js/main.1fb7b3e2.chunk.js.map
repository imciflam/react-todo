{"version":3,"sources":["components/TodoItem.js","components/Todos.js","components/AddTodo.js","components/pages/About.js","components/layout/Header.js","App.js","serviceWorker.js","index.js"],"names":["TodoItem","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","getStyle","background","padding","borderBottom","textDecoration","props","todo","completed","inherits","createClass","key","value","_this$props$todo","id","isCompleted","title","react_default","a","createElement","style","className","type","onChange","markComplete","bind","checked","onClick","delTodo","btnStyle","Component","color","cursor","float","border","borderRadius","fontSize","height","lineHeight","width","Todos","todos","map","components_TodoItem","AddTodo","state","flex","onSubmit","e","preventDefault","addTodo","setState","defineProperty","target","name","display","placeholder","divStyle","textAlign","About","Fragment","Header","headerStyle","Link","linkStyle","to","App","axios","delete","then","res","toConsumableArray","filter","post","data","_this2","get","_this3","BrowserRouter","Route","exact","path","render","AddTodo_AddTodo","components_Todos","component","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1fb7b3e2.chunk.js","sourcesContent":["import React, { Component } from 'react' //rce shortcut\r\nimport PropTypes from 'prop-types'\r\n\r\nexport class TodoItem extends Component {\r\n    getStyle = () => { \r\n        return {\r\n            background: '#f4f4f4',\r\n            padding: '10px',\r\n            borderBottom: '1px #ccc dotted',\r\n            textDecoration: this.props.todo.completed ? 'line-through' : 'none'\r\n          }      \r\n    } \r\n\r\n    /*markComplete = (e)=> {//doesn't have access to component's stuff since it's a custom function\r\n        console.log(this.props);\r\n    }*/\r\n  render() {\r\n    const { id, title } = this.props.todo;\r\n    const isCompleted = this.props.todo.completed;\r\n     return (\r\n        <div style={this.getStyle()}> \r\n        \r\n\r\n\r\n        <div className=\"page__toggle\"><p>  \r\n      <label className=\"toggle\">\r\n        <input className=\"toggle__input\" type=\"checkbox\" onChange={this.props.markComplete.bind(this, id)} checked={isCompleted ? 'checked' : ''}/> { ' '}\r\n        <span className=\"toggle__label\">\r\n          <span className=\"toggle__text\"></span>\r\n        </span>\r\n      </label>\r\n         <label>\r\n         <span>{this.props.todo.title} </span></label><button onClick={this.props.delTodo.bind(this,id)} style = {btnStyle}>x</button>\r\n     \r\n           </p>\r\n    </div>  \r\n      </div>\r\n    )//equals to title\r\n  \r\n\r\n \r\n} \r\n  \r\n \r\n\r\n}\r\n\r\nTodoItem.propTypes =\r\n{\r\n    todo:PropTypes.object.isRequired\r\n}\r\n\r\nconst itemStyle = \r\n{\r\n    backgroundColor: '#f4f4f4'\r\n}\r\n\r\nconst btnStyle = {\r\n  background: '#c93a52',\r\n  color:'#ffffff',\r\n  cursor:'pointer',\r\n  float:'right',\r\n  border: '1px solid #f00',\r\n  borderRadius: '2em',\r\n  fontSize: '12px',\r\n  height: '20px',\r\n    lineHeight: '2px',\r\n    width: '20px'\r\n}\r\nexport default TodoItem\r\n","import React, { Component } from 'react';  \r\nimport TodoItem from './TodoItem';\r\nimport PropTypes from 'prop-types'\r\n\r\nclass Todos extends Component { \r\n  render() {\r\n     // console.log(this.props.todos);//props of todo \r\n    return this.props.todos.map((todo) => \r\n    (\r\n        <TodoItem key={todo.id} todo ={todo} markComplete = {this.props.markComplete} delTodo={this.props.delTodo}/>//unique key props\r\n    )\r\n    );\r\n  }\r\n}\r\n\r\nTodos.propTypes =\r\n{\r\n    todos:PropTypes.array.isRequired,\r\n    markComplete:PropTypes.func.isRequired,\r\n    delTodo:PropTypes.func.isRequired\r\n}\r\n\r\nexport default Todos;\r\n","import React, { Component } from 'react'\r\n\r\nexport default class AddTodo extends Component {\r\n\r\n    state = {\r\n        title:''\r\n    }\r\n\r\n    getStyle = () => { \r\n        return {\r\n            background: '#444444',\r\n            color: '#fff',\r\n            flex:1\r\n          }      \r\n    } \r\n\r\n    onSubmit = (e) =>{\r\n        e.preventDefault();\r\n        this.props.addTodo(this.state.title);\r\n        this.setState({title:''})\r\n    }\r\n    onChange=(e)=>this.setState({[e.target.name]:e.target.value});\r\n  render() {\r\n    return (\r\n      <form onSubmit = {this.onSubmit} style ={{display:'flex'}}>\r\n          <input \r\n          type = \"text\" \r\n          name = \"title\" \r\n          style = {{flex:10,padding:'5px'}}\r\n          placeholder=\"add todo..\" \r\n          value={this.state.title}\r\n          onChange={this.onChange}\r\n          />\r\n          <input style={this.getStyle()}\r\n          type=\"submit\"\r\n          value = \"Submit\"/>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\n function About() {\r\n  return (\r\n    <React.Fragment>\r\n      <div style={divStyle}>\r\n      <h1>About</h1>\r\n      <p>Todolist, react version</p>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nconst divStyle={\r\n  color:'#333333',\r\n  textAlign:'center',\r\n  padding:'10px'\r\n}\r\n\r\nexport default About;","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nexport default function Header() {\r\n  return (\r\n    <header style={headerStyle}>\r\n        <h1>TO-DO LIST</h1>\r\n        <Link style ={linkStyle} to = \"/\"> Home</Link> | <Link style ={linkStyle} to = \"/about\">About</Link>\r\n    </header>\r\n  )\r\n}\r\nconst headerStyle={\r\n    background:'#333',\r\n    color:'#fff',\r\n    textAlign:'center',\r\n    padding:'10px'\r\n}\r\n\r\nconst linkStyle = \r\n{\r\n    color:'#fff',\r\n    textDecoration:'none',\r\n    padding:'3px'\r\n}","import React, { Component } from 'react'; \r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport Todos from './components/Todos';\r\nimport AddTodo from './components/AddTodo';\r\nimport About from './components/pages/About';\r\nimport Header from './components/layout/Header'\r\nimport uuid from 'uuid'\r\nimport axios from 'axios'\r\n\r\nclass App extends Component {\r\n  state= //cloud of data\r\n  {\r\n    todos: [\r\n      //hardcoded\r\n      /*{\r\n        id: uuid.v4(),\r\n        title: 'todo1',\r\n        completed: false\r\n      },\r\n      {\r\n        id: uuid.v4(),\r\n        title: 'todo2',\r\n        completed: false\r\n      },\r\n      {\r\n        id: uuid.v4(),\r\n        title: 'todo3',\r\n        completed: false\r\n      },*/\r\n    ]\r\n  }\r\n  componentDidMount() {\r\n    axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10')\r\n      .then(res => this.setState({ todos: res.data }))\r\n  }\r\n\r\n  //toggle complete\r\n  markComplete = (id) => {\r\n    this.setState({ todos: this.state.todos.map(todo => {\r\n      if (todo.id === id)  {\r\n        todo.completed =!todo.completed;\r\n      }\r\n      return todo;\r\n    })});//if matched, update\r\n  }\r\n  //delete todo\r\ndelTodo = (id)=>{\r\n  //console.log(id);\r\n  axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`).then(res=>this.setState({todos:[...this.state.todos.filter(todo=>todo.id!==id)]}))\r\n  //this.setState({todos:[...this.state.todos.filter(todo=>todo.id!==id)]})\r\n}\r\n//add\r\naddTodo = (title) =>{\r\n  /*const newTodo = {\r\n    id:uuid.v4(),\r\n    title:title,\r\n    completed:false \r\n  }\r\n  this.setState({todos:[...this.state.todos, newTodo]})*/\r\n  axios.post('https://jsonplaceholder.typicode.com/todos',{\r\n    title:title,\r\n    completed:false\r\n  })\r\n  .then(res=>this.setState({todos:\r\n  [...this.state.todos,res.data]}));\r\n}\r\n  render() {\r\n    //console.log(this.state.todos);\r\n    return (\r\n      <Router> \r\n      <div className=\"App\">\r\n      <div className = 'container'> \r\n      <Header/>\r\n      <Route exact path = '/' render = {props => (\r\n      <React.Fragment>\r\n      <AddTodo addTodo = {this.addTodo}/>\r\n        <Todos todos = {this.state.todos} markComplete={this.markComplete} delTodo = {this.delTodo}/>     {/* slipping props into Todos */}\r\n\r\n      </React.Fragment>  \r\n       )}/>\r\n       <Route path = \"/about\" component = {About}/>\r\n      </div>\r\n      </div>\r\n      </Router>\r\n    ); \r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}